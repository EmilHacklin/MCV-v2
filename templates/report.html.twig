{% extends "base.html.twig" %}

{% block title %}MVC: Report{% endblock %}

{% block body %}
<div class="column">
    <h1>Report</h1>
    <div class="row">
        <h2 id="Kmom01">Kmom01</h2>
        <p>
            I detta Komom så har vi börjat skapa en hemsida med PHP och ramverket Symphony. 
            Vi har lärt oss om att använda terminalen på en Linux distro för att installera en webbserver samt Git för att hantera versionskontroller. 
            Vidare har vi använt os av node.js för att installera Encore för att hantera dynamiska preprocessor som LESS.
        </p>
        <p>
            Jag har tidigare kunskaper inom objektorienterad programmering i ett antal olika språk som till exempel c++, java, c# för att nämna några få. 
            Så det var ingen stor förändring med att börja programmera.
        </p>
        <p>
            PHP:s modell att hantera klasser och objekt som många av tidigare nämnda programmeringsspråk. 
            Till den grad att om man utfört objektorienterad programmering tidigare så är det inga problem att hoppa rakt in i det. 
        </p>
        <p>
            Om man inte har gjort objektorienterad programmering tidigare så behöver man bara förstå att objekt är versioner av klasser men inte själva klassen i sig, på samma sätt som att en bil kan vara en Volvo men en Volvo är inte alla bilar. 
            Vidare så när man ändrar på variabler i objektet så ändras bara variablerna för det objektet.
        </p>
        <p>
            Dock hur enkelt jag hade att börja programmera så blev jag inte så nöjd med hur min sida ser ut, då jag stötte på flera problem med själva ramvärksdelen som gjorde att jag behövde om installera ramverket flera gånger. 
            Detta drog ut på tiden jag hade vilket gjorde att själva stylingen på sidan blev inte den bästa.
        </p>
        <p>
            Där emot så är själva koden för sidan mycket bättre samt så är det lätt att strukturera filerna till en lättförståelig hierarki i Symphony ramverket. 
            Då layouten av sidan byggs upp av twig template filer som kallar på resurser i assets mappen. 
        </p>
        <p>
            Om jag skulle säga en sak som står mest ut i vad jag lärt mig för denna Komom så skulle det vara Sympony i sin helhet då den förenklar byggandet av en webbsida. 
            Förutsatt att man inte sparar sina filer på Windows utan istället i Linux distron, som var orsaken till det flesta av mina problem.
        </p>  
    </div>
    <div class="row">
        <h2 id="Kmom02">Kmom02</h2>
        <p>
            Under detta Kmom så har vi arbetat med att skapa ett tärningsspel och en kortlek. 
            För att skap tärningspelet och kortleken så använde vi oss av klasser som ärver från andra kassar genom att bygga vidare på förälder klassen. 
        </p>
        <p>
            Vidare använde vi oss utav komposition för att en klass skall ha en eller flera instanser av en annan klass som medlemsvariabel.
        </p>
        <p>
            Vi använde inte oss av några interface för våra klasser då det inte var något vi vill ha just för våra basklasser Dice och Card. 
            Men om vi skulle använt ett interface så skulle vi göra det för att berätta om vad för metoder en klass som uppfyller interfacet utan att innehålla några basmetoder som våra Dice och Card klasser gör.
        </p>
        <p>
            Vidare använde vi inte några traits men vi skulle kunna använda dem för att klumpa ihop olika metoder för klasser att använda utan att skapa separata klassmetoder i varje klass man vill använda sig av dessa traits.
        </p>
        <p>
            Jag löste uppgiften att skapa klasser för korten genom att skapa klasserna Card, CardGraphic, CardHand och DeckOfCards.
        </p>
        <p>
            Card klassen sköter själva handlandet av ett kort, dess rank, dess färg osv. samt skriver ut en sträng som beskriver kortet.
        </p>
        <p>
            CardGraphic klassen bygger vidare på Card klassen genom att ärva den och sedan implementerar en grafisk representation av kortet. 
            Jag valde att använda mig av utf-8 karaktärer för korten men en annan väg vore att använda sig av bilder för att visa korten dok så föredrar jag min väg då den borde vara mindre prestandakrävande då karaktärer är mindre data än bilder.
        </p>
        <p>
            CardHand fungerar mest som en Array av Card objekt men har också funktionalitet för att räkna ut poängvärden av en hand kort.
        </p>
        <p>
            DeckOfCards bygger upp logiken för en 52 korts kortlek, då man kan blanda och dra kort från den samt återställa den när till exempel en runda kortspel är slut.
        </p>
        <p>
            Det gick mycket bra att bygge denna här Cards implementationen i Symphony, det gick särskilt bra att felsöka problem då felmeddelandena ledde snabbt till var problemen var. 
        </p>
        <p>
            Det som jam mest tycker jag har lärt mig om detta Kmom var mer om hur Symfoni fungerar och hur session fungerar mer en vad jag gjorde innan.
        </p>
    </div>
    <div class="row">
        <h2 id="Kmom03">Kmom03</h2>
    </div>
    <div class="row">
        <h2 id="Kmom04">Kmom04</h2>
    </div>
    <div class="row">
        <h2 id="Kmom05">Kmom05</h2>
    </div>
    <div class="row">
        <h2 id="Kmom06">Kmom06</h2>
    </div>
    <div class="row">
        <h2 id="Kmom10">Kmom10</h2>
    </div>
</div>
{% endblock %}